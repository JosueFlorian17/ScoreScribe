# Generated from C:/Users/josen/PycharmProjects/pythonProject2/prueba.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,90,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,
        1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,5,9,58,8,9,10,
        9,12,9,61,9,9,1,10,1,10,5,10,65,8,10,10,10,12,10,68,9,10,1,11,1,
        11,5,11,72,8,11,10,11,12,11,75,9,11,1,11,1,11,1,12,4,12,80,8,12,
        11,12,12,12,81,1,13,4,13,85,8,13,11,13,12,13,86,1,13,1,13,0,0,14,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,1,0,6,1,0,65,90,3,0,48,57,65,90,97,122,1,0,97,122,1,0,34,34,
        1,0,48,57,3,0,9,10,13,13,32,32,94,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,1,29,1,0,0,0,3,32,1,0,0,0,5,35,1,0,0,0,7,39,1,0,
        0,0,9,41,1,0,0,0,11,45,1,0,0,0,13,47,1,0,0,0,15,49,1,0,0,0,17,53,
        1,0,0,0,19,55,1,0,0,0,21,62,1,0,0,0,23,69,1,0,0,0,25,79,1,0,0,0,
        27,84,1,0,0,0,29,30,5,124,0,0,30,31,5,58,0,0,31,2,1,0,0,0,32,33,
        5,58,0,0,33,34,5,124,0,0,34,4,1,0,0,0,35,36,5,60,0,0,36,37,5,119,
        0,0,37,38,5,62,0,0,38,6,1,0,0,0,39,40,5,61,0,0,40,8,1,0,0,0,41,42,
        5,40,0,0,42,43,5,58,0,0,43,44,5,41,0,0,44,10,1,0,0,0,45,46,5,123,
        0,0,46,12,1,0,0,0,47,48,5,125,0,0,48,14,1,0,0,0,49,50,5,35,0,0,50,
        51,5,35,0,0,51,52,5,35,0,0,52,16,1,0,0,0,53,54,5,35,0,0,54,18,1,
        0,0,0,55,59,7,0,0,0,56,58,7,1,0,0,57,56,1,0,0,0,58,61,1,0,0,0,59,
        57,1,0,0,0,59,60,1,0,0,0,60,20,1,0,0,0,61,59,1,0,0,0,62,66,7,2,0,
        0,63,65,7,1,0,0,64,63,1,0,0,0,65,68,1,0,0,0,66,64,1,0,0,0,66,67,
        1,0,0,0,67,22,1,0,0,0,68,66,1,0,0,0,69,73,5,34,0,0,70,72,8,3,0,0,
        71,70,1,0,0,0,72,75,1,0,0,0,73,71,1,0,0,0,73,74,1,0,0,0,74,76,1,
        0,0,0,75,73,1,0,0,0,76,77,5,34,0,0,77,24,1,0,0,0,78,80,7,4,0,0,79,
        78,1,0,0,0,80,81,1,0,0,0,81,79,1,0,0,0,81,82,1,0,0,0,82,26,1,0,0,
        0,83,85,7,5,0,0,84,83,1,0,0,0,85,86,1,0,0,0,86,84,1,0,0,0,86,87,
        1,0,0,0,87,88,1,0,0,0,88,89,6,13,0,0,89,28,1,0,0,0,6,0,59,66,73,
        81,86,1,6,0,0
    ]

class pruebaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    ID_CAP = 10
    ID_MIN = 11
    STRING = 12
    INT = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'|:'", "':|'", "'<w>'", "'='", "'(:)'", "'{'", "'}'", "'###'", 
            "'#'" ]

    symbolicNames = [ "<INVALID>",
            "ID_CAP", "ID_MIN", "STRING", "INT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "ID_CAP", "ID_MIN", "STRING", "INT", "WS" ]

    grammarFileName = "prueba.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


